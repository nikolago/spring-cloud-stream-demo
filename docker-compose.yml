version: "3.3"

volumes:
  postgres_local:

services:

  postgres:
    image: debezium/postgres:11
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespw
      - PGPASSWORD=postgrespw
      - TZ=UTC
      - PGTZ=UTC
    volumes:
      - postgres_local:/var/lib/postgresql/data
      - ./_infrastructure/postgre/init/:/docker-entrypoint-initdb.d/
    ports:
      - 25432:5432

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: wurstmeister/kafka:2.12-2.1.0
    ports:
      - 9092:9092
    expose:
      - 9093
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    depends_on:
      - zookeeper

  connect:
    image: debezium/connect:1.2
    ports:
      - 8083:8083
    links:
      - kafka
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9093
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_source_connect_configs
      - OFFSET_STORAGE_TOPIC=my_source_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - KAFKA_DEBUG=true
      - DEBUG_SUSPEND_FLAG=n

  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    ports:
      - 9050:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
      JVM_OPTS: -Xms32M -Xmx64M
      SERVER_SERVLET_CONTEXTPATH: /
